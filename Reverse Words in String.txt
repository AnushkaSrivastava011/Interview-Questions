Reverse words in a given string 
Given a String of length S, reverse the whole string without reversing the individual words in it. Words are separated by dots.

Input:
The first line contains T denoting the number of testcases. T testcases follow. Each case contains a string S containing characters.

Output:
For each test case, in a new line, output a single line containing the reversed String.

User Task:
The task is to complete the function reverseWords() which reverse words from the given string and prints the answer. The newline is automatically appended by the driver code.

Expected Time Complexity: O(|S|)
Expected Auxiliary Space: O(1)

Constraints:
1 <= T <= 100
1 <= |S| <= 2000

Example:
Input:
2
i.like.this.program.very.much
pqr.mno

Output:
much.very.program.this.like.i
mno.pqr

import java.util.*;

import java.lang.*;

import java.io.*;


class GFG {
    
public static void main(String[] args) {

       
 Scanner sc = new Scanner(System.in);
     
   int test = sc.nextInt();
       
 while (test > 0) {
            
String s = sc.next();

          
  Reverse obj = new Reverse();
        
    obj.reverseWords(s);
            
 System.out.println();

         
   test--;
        
}
   
 }

}
// 
} Driver Code Ends



class Reverse {

  
  public static void reverseWords(String sd) {
    
    
         sd+=".";
        
 sd="."+sd;
        
 int s = sd.length()-1,e = sd.length()-2;
         
for(int i=e;i>=0;i--)
         {
       
     char ch = sd.charAt(i);
          
  if(ch=='.')
            {
           
     if(i!=0)
               
 System.out.print(sd.substring(i+1,s)+".");
       
         else
              
  System.out.print(sd.substring(i+1,s));
             
   s=i;
           
 }
     
    }
    
}

}